package cn.xdl.ovls.course.dao;


import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Many;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;

import cn.xdl.ovls.course.entity.Direction;

public interface DirectionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @Delete({
        "delete from direction",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @Insert({
        "insert into direction (id, name)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})"
    })
    int insert(Direction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @InsertProvider(type=DirectionSqlProvider.class, method="insertSelective")
    int insertSelective(Direction record);

    /**
     * 根据ID查询方向
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @Select({
        "select",
        "id, name",
        "from direction",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR)
    })
    Direction selectByPrimaryKey(Integer id);

    /**
     * 根据ID查询方向信息包含科目信息
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @Select({
        "select",
        "id, name",
        "from direction",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(property="subjects",javaType=List.class,column="id", //column用于指定要查询的参数
    	many=@Many(select="cn.xdl.ovls.course.dao.SubjectMapper.selectByDirectionId",//指定对应的要查询SQL的方法
    		fetchType=FetchType.EAGER))//饥饿加载
    })
    Direction selectContainsSubjectByPrimaryKey(Integer id);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @Select({
        "select",
        "id, name",
        "from direction"
    })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(property = "subjects", javaType = List.class, column = "id", // column用于指定要查询的参数
			many = @Many(select = "cn.xdl.ovls.course.dao.SubjectMapper.selectByDirectionId", // 指定对应的要查询SQL的方法
			fetchType = FetchType.EAGER) )// 饥饿加载
	})
	List<Direction> selectAll();
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @UpdateProvider(type=DirectionSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Direction record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table direction
     *
     * @mbggenerated Sat Nov 03 01:12:24 CST 2018
     */
    @Update({
        "update direction",
        "set name = #{name,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Direction record);
}